#!/usr/bin/perl -w

use lib "./blib/lib";
use Net::OSCAR;
use Data::Dumper;
use Devel::Size qw(total_size);
use Test::Memory::Cycle tests => 1;
use Symbol::Table;

use vars qw($oscar);
sub signon_done($);

my($screenname, $password);

print "Screenname: ";
$screenname = <STDIN>;
chomp $screenname;

print "Password: ";
system("stty -echo");
$password = <STDIN>;
system("stty echo");
print "\n";
chomp $password;


$oscar = Net::OSCAR->new(capabilities => [qw(typing_status extended_status buddy_icons file_transfer)]);
$oscar->set_callback_signon_done(\&signon_done);
$oscar->signon(screenname => $screenname, password => $password);

while(1) { $oscar->do_one_loop(); }

sub signon_done($) {
	memory_cycle_ok($oscar);
	my $size = total_size($oscar);
	my $cachesize = total_size(\%Net::OSCAR::XML::PROTOCACHE);
	print "\$oscar has size $size, protocache $cachesize\n";

	print "*main::\n";
	ShowVars(undef, "\t");
	print "*Net::OSCAR::\n";
	ShowPackages("Net::OSCAR", "\t");
	ShowVars("Net::OSCAR", "\t");
	exit;
}

sub ShowPackages {
	my($pkg, $prefix) = @_;

	my $st = Symbol::Table->New('PACKAGE', "$pkg");
	while(my($subpkgname, $subpkgsymtab) = each(%$st)) {
		print $prefix . "*" . $subpkgname . "::\n";

		my $subpkg = $pkg . "::" . $subpkgname;
		ShowPackages($subpkg, "$prefix\t");
		ShowVars($subpkg, "$prefix\t");
	}
}

sub ShowVars {
	my($pkg, $prefix) = @_;

	foreach (["SCALAR", '$'], ["ARRAY", '@'], ["HASH", '%']) {
		my($type, $sigil) = @$_;

		my $st;
		if($pkg) {
			$st = Symbol::Table->New($type, $pkg);
		} else {
			$st = Symbol::Table->New($type);
		}

		foreach (keys %$st) {
			my $size;
			if($sigil eq '$') {
				$size = total_size(\${$st->{$_}});
			} elsif($sigil eq '@') {
				$size = total_size(\@{$st->{$_}});
			} else {
				$size = total_size(\%{$st->{$_}});
			}

			print "$prefix$sigil$_ == $size\n";
		}
	}
}
