#!/usr/bin/perl

# Checksums data from standard input with the OSCAR file transfer checksum algorithm

use strict;
use warnings;

undef $/;
my $data = <STDIN>;

# Adopted from Gaim's implementation
sub checksum($) {
	my($part) = @_;
	my $check = (0xFFFF0000 >> 16) & 0xFFFF;

	foreach my $val (unpack("n*", $part)) {
		my $oldcheck = $check;

		$check -= $val;

		# Straight $check > $oldcheck you say?
		# Well, these are 32-bit unsigned values, and it tries to
		# compare them as signed.
		if(pack("N", $check) gt pack("N", $oldcheck)) {
			$check--;
		}
	}

	$check = (($check & 0x0000FFFF) + ($check >> 16));
	$check = (($check & 0x0000FFFF) + ($check >> 16));
	$check = $check << 16;

	printf "%u\n", $check;
}

checksum($data);

